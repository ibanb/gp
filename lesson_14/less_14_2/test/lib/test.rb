# encoding: utf-8
#
# Тест взят с сайта Синтона
#
# http://www.syntone-spb.ru/library/psytests/content/4969.html
#
# Класс Test, хранящий вопросы и логику прохождения теста
class Test
  def initialize
    # Переменная @questions будет хранить массив вопросов
    @questions = [
      "Переживаете ли вы в ожидании важной деловой встречи?",
      "Если вам поручат выступить с докладом на каком либо мероприятии," \
      "вызовет ли это у вас чувство дискомфорта?",
      "Вы откладываете поход к врачу до последнего момента?",
      "Если вам предстоит командировка в незнакомый город, постараетесь ли" \
      "вы избежать этой командировки?",
      "Вы делитесь своими мыслями и чувствами с кем бы то ни было?",
      "Вас раздражает, когда незнакомые люди на улице обращаются к вам с " \
      "вопросом?",
      "Вы думаете, что людям разных поколений действительно трудно понимать " \
      "друг друга?",
      "Вам сложно будет сказать человеку, чтобы он вернул вам деньги, взятые " \
      "у вас несколько месяцев назад?",
      "Вам подали некачественное блюдо в кафе. Промолчите ли вы?",
      "Вы заговорите с незнакомым человеком, оставшись с ним наедине?",
      "Обнаружив в кассе, магазине, библиотеке длинную очередь, вы встанете " \
      "в нее?",
      "Вам неприятно быть судьей в чужих конфликтах?",
      "Вы всегда оцениваете произведения искусства на свой вкус, не " \
      "прислушиваясь к чужому мнению?",
      "Если кто то выскажет ошибочную точку зрения на хорошо известный вам " \
      "вопрос, вы предпочтете промолчать и не исправлять его?",
      "Просьбы помочь в учебе или работе раздражают вас?",
      "Вам проще изложить свое мнение на бумаге, чем рассказать о нем?"
    ]

    # Переменная где будем хранить суммарное кол-во баллов за ответы
    @points = 0

    # Переменная, в которой будет номер текущего вопроса теста,
    # увеличивается на 1 с каждым заданным вопросом.
    @current_question = 0
  end

  # Метод, который отвечает на вопрос «Закончился ли тест?» мы будем
  # использовать его в основной программе, чтобы понять, когда пора прекращать
  # задавать вопросы.
  #
  # Очевидно, условие окончания теста — текущий вопрос превысил размер массива
  # вопросов — вопросы кончились.
  def finished?
    return @current_question >= @questions.size
  end

  # Метод, который задает пользователю очередной вопрос и спрашивает ответ. Этот
  # метод повторяет алгоритм этого теста из 8 урока.
  def next_question
    # Выводим очередной вопрос из массива
    puts @questions[@current_question]

    # Спрашиваем у пользователя вариант ответа пока он не введет одну из трех
    # цифр.
    user_input = nil
    until user_input == 1 || user_input == 2 || user_input == 3
      puts "введите число: 1 – да, 2 – нет, 3 – иногда, и нажмите Enter"
      user_input = gets.to_i
    end

    if user_input == 1
      # Увеличиваем значение переменной @points на 2 за ответ "да"
      @points += 2
    elsif user_input == 3
      # Увеличиваем значение переменной @points на 1 за ответ "иногда"
      @points += 1
    end

    # Увеличиваем счетчик заданных вопросов
    @current_question += 1
  end

  # Метод-аксессор (геттер) для переменной @points — баллы набранные в тесте
  def points
    return @points
  end
end
